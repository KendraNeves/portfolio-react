{"version":3,"sources":["App.js","serviceWorker.js","components/pink-block.jsx","components/arrow.jsx","components/icon.jsx","components/sidebar.jsx","components/navbar.jsx","components/footer.jsx","components/jumbotron-page.jsx","components/project-card.jsx","components/project-section.jsx","project-card-data.js","index.js"],"names":["App","className","Boolean","window","location","hostname","match","ColorBlock","props","style","backgroundColor","blockColor","height","Arrow","Fragment","zIndex","position","marginBottom","arrowColor","preserveAspectRatio","viewBox","version","width","top","xmlns","d","fill","children","Icon","href","alt","iconPic","target","aria-label","color","margin","fontSize","SideBar","bottom","NavBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Footer","fluid","md","Date","getFullYear","JumbotronPage","ProjectCard","projectPic","cardTitle","description","techStack","githubUrl","deployedUrl","datePosted","Card","Img","variant","src","process","Body","Title","Text","ProjectSection","state","cards","items","trio","i","length","push","Col","xs","Row","Container","this","renderCards","Component","cardList","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1e075224.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nconst ColorBlock = (props) => {\n  return (\n    <div\n      style={{\n        backgroundColor: props.blockColor,\n        height: props.height || 600,\n      }}\n    ></div>\n  );\n};\n\nexport default ColorBlock;\n","import React from \"react\"\nimport ColorBlock from \"./pink-block\"\n\n/*\nExample usage (like in index.js right now):\n<Arrow color=\"#123456\" zIndex=\"-3\" height=\"500\">\n  your content here\n</Arrow>\n*/\nconst Arrow = props => {\n  return (\n    <React.Fragment>\n      {/* This div is the full arrow */}\n      <div\n        style={{\n          zIndex: props.zIndex || -1,\n          position: \"relative\",\n          height: props.height || 675,\n          marginBottom: -1 * props.height || -675,\n        }}\n      >\n        <ColorBlock\n          blockColor={props.arrowColor}\n          height={props.height ? props.height - 75 : 600}\n        />\n        <svg\n          preserveAspectRatio=\"none\"\n          viewBox=\"0 0 100 102\"\n          version=\"1.1\"\n          style={{ width: `100%`, height: 75, position: \"relative\", top: -1 }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M0 0 L50 100 L100 0 Z\" fill={props.arrowColor}></path>\n        </svg>\n      </div>\n\n      {/* This div is the content that gets overlaid on the arrow. Notice it wraps props.children . */}\n      <div\n        style={{\n          height: props.height ? props.height - 75 : 600,\n        }}\n      >\n        {props.children}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Arrow\n","import React from \"react\";\nimport \"../index.css\";\n\nconst Icon = (props) => {\n  const { href, alt, iconPic } = props;\n\n  return (\n    <a href={href} target=\"_blank\" aria-label={alt}>\n      <i\n        className={iconPic}\n        style={{\n          color: \"#000000\",\n          margin: \"10px 0 10px 20px\",\n          fontSize: \"30px\",\n        }}\n      ></i>\n    </a>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Icon from \"./icon\";\n\nconst SideBar = () => {\n  return (\n    <div\n      style={{\n        zIndex: 2,\n        position: \"fixed\",\n        bottom: \"100px\",\n        width: \"40px\",\n        height: \"400px\",\n      }}\n    >\n      <Icon href=\"#\" alt=\"up chevron\" iconPic=\"fas fa-chevron-up\" />\n      <Icon\n        href=\"https://github.com/KendraNeves\"\n        alt=\"GitHub icon\"\n        iconPic=\"fab fa-github\"\n      />\n      <Icon\n        href=\"https://www.linkedin.com/in/kendraneves/\"\n        alt=\"Linked In icon\"\n        iconPic=\"fab fa-linkedin\"\n      />\n      <Icon\n        href=\"https://twitter.com/kendraneves\"\n        alt=\"Twitter icon\"\n        iconPic=\"fab fa-twitter\"\n      />\n      <Icon href=\"#\" alt=\"Email icon\" iconPic=\"fas fa-envelope\" />\n      <Icon href=\"#\" alt=\"resume icon\" iconPic=\"far fa-file\" />\n      <Icon href=\"#\" alt=\"down chevron\" iconPic=\"fas fa-chevron-down\" />\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#link\">Link</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst Footer = () => {\n  return (\n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Footer Content</h5>\n            <p>\n              Here you can use rows and columns here to organize your footer\n              content.\n            </p>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Links</h5>\n            <ul>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Link 1</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Link 2</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Link 3</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Link 4</a>\n              </li>\n            </ul>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\n          <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { MDBJumbotron, MDBContainer } from \"mdbreact\";\n\nconst JumbotronPage = () => {\n  return (\n    <MDBJumbotron fluid style={{ backgroundColor: \"#dea6af\" }}>\n      <MDBContainer>\n        <h2 className=\"display-4\">Kendra Neves</h2>\n        <p className=\"lead\">Frontend Software Engineer</p>\n      </MDBContainer>\n    </MDBJumbotron>\n  );\n};\n\nexport default JumbotronPage;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Icon from \"./icon\";\n\nconst ProjectCard = (props) => {\n  const {\n    projectPic,\n    alt,\n    cardTitle,\n    description,\n    techStack,\n    githubUrl,\n    deployedUrl,\n    datePosted,\n  } = props;\n\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Img\n        variant=\"top\"\n        src={process.env.PUBLIC_URL + projectPic}\n        alt={alt}\n      />\n      <Card.Body>\n        <Card.Title>{cardTitle}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        <Card.Text>{techStack}</Card.Text>\n        <Icon\n          href={githubUrl}\n          alt=\"link to github repo\"\n          iconPic=\"fab fa-github\"\n        />\n        <Icon\n          href={deployedUrl}\n          alt=\"link to deployed site\"\n          iconPic=\"fas fa-external-link-alt\"\n        />\n      </Card.Body>\n      <Card.Footer>\n        <small className=\"text-muted\">{datePosted}</small>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default ProjectCard;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./project-card\";\n\nclass ProjectSection extends Component {\n  state = {};\n\n  renderCards(cards) {\n    const items = [];\n    let trio = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      trio.push(\n        <Col xs={12} md={true} className=\"text-center\">\n          <ProjectCard {...cards[i]} />\n        </Col>\n      );\n\n      if (i % 3 === 2) {\n        items.push(<Row>{trio}</Row>);\n\n        trio = [];\n      }\n    }\n\n    return items;\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs={12}>Projects</Col>\n        </Row>\n        {this.renderCards(this.props.children)}\n      </Container>\n    );\n  }\n}\n\nexport default ProjectSection;\n","// const ProjectCard = (props) => {\n//   const {\n//     projectPic,\n//     alt,\n//     cardTitle,\n//     description,\n//     techStack,\n//     githubUrl,\n//     deployedUrl,\n//     datePosted,\n//   } = props;\n\nexport const cardList = [\n  {\n    \"cardTitle\": \"Nutmeg Concrete\",\n    \"projectPic\": \"./images/projects/nutmeg-concrete.PNG\",\n    \"alt\": \"nutmeg concrete website\",\n    \"deployedUrl\": \"https://nutmegconcrete.com/\",\n    \"description\": \"This card has supporting text below as a natural lead-in to additional content\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"\",\n    \"datePosted\": \"Posted December 11, 2019\"\n  },\n\n  {\n    \"cardTitle\": \"Password Generator\",\n    \"projectPic\": \"./images/projects/password-generator.PNG\",\n    \"alt\": \"password generator website\",\n    \"deployedUrl\": \"https://kneves1.github.io/03-Password-Generator/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/03-Password-Generator\",\n    \"datePosted\": \"Posted February 14, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Code Quiz\",\n    \"projectPic\": \"./images/projects/code-quiz.PNG\",\n    \"alt\": \"code quiz website\",\n    \"deployedUrl\": \"https://kneves1.github.io/04-Code-Quiz/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/04-Code-Quiz\",\n    \"datePosted\": \"Posted February 21, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Work Day Scheduler\",\n    \"projectPic\": \"./images/projects/work-day-scheduler.PNG\",\n    \"alt\": \"work day scheduler app\",\n    \"deployedUrl\": \"https://kneves1.github.io/05-Work-Day-Scheduler/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/05-Work-Day-Scheduler\",\n    \"datePosted\": \"Posted February 29, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Weather Dashboard\",\n    \"projectPic\": \"./images/projects/weather-dashboard.PNG\",\n    \"alt\": \"weather dashboard app\",\n    \"deployedUrl\": \"https://kneves1.github.io/06-Weather-Dashboard/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/06-Weather-Dashboard\",\n    \"datePosted\": \"Posted March 9, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Good Morning App\",\n    \"projectPic\": \"./images/projects/good-morning-app.PNG\",\n    \"alt\": \"good morning app\",\n    \"deployedUrl\": \"https://kneves1.github.io/Best-Group-Repo/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/Best-Group-Repo\",\n    \"datePosted\": \"Posted March 11, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"README Generator\",\n    \"projectPic\": \"./images/projects/work-day-scheduler.PNG\",\n    \"alt\": \"README generator\",\n    \"deployedUrl\": \"https://github.com/kneves1/09-README-Generator\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/09-README-Generator\",\n    \"datePosted\": \"Posted March 29, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Team Profile Generator\",\n    \"projectPic\": \"./images/projects/work-day-scheduler.PNG\",\n    \"alt\": \"team profile generator\",\n    \"deployedUrl\": \"https://github.com/kneves1/10-Team-Profile-Generator\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/10-Team-Profile-Generator\",\n    \"datePosted\": \"Posted April 5, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Note Taking App\",\n    \"projectPic\": \"./images/projects/note-taker2.PNG\",\n    \"alt\": \"note taking app\",\n    \"deployedUrl\": \"https://secret-springs-62228.herokuapp.com/notes\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/Express-Note-Taker\",\n    \"datePosted\": \"Posted April 13, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Employee Tracker\",\n    \"projectPic\": \"./images/projects/work-day-scheduler.PNG\",\n    \"alt\": \"employee tracking app\",\n    \"deployedUrl\": \"https://github.com/kneves1/Employee-Tracker\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/Employee-Tracker\",\n    \"datePosted\": \"April 20, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"Burger App\",\n    \"projectPic\": \"./images/projects/burger-app.PNG\",\n    \"alt\": \"burger app\",\n    \"deployedUrl\": \"https://calm-lake-01040.herokuapp.com/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/Node-Express-Handlebars\",\n    \"datePosted\": \"April 26, 2020\"\n  },\n\n  {\n    \"cardTitle\": \"TP Finder\",\n    \"projectPic\": \"./images/projects/tp-finder1.PNG\",\n    \"alt\": \"toilet paper finding app\",\n    \"deployedUrl\": \"https://vast-sierra-58831.herokuapp.com/\",\n    \"description\": \"Hello World!\",\n    \"techStack\": \"\",\n    \"githubUrl\": \"https://github.com/kneves1/TP-Finder\",\n    \"datePosted\": \"May 8, 2020\"\n  },\n\n  // {\n  //   \"cardTitle\":\"\",\n  //   \"projectPic\": \"\",\n  //   \"alt\": \"\",\n  //   \"deployedUrl\": \"\",\n  //   \"description\": \"\",\n  // \"techStack\": \"\",//   \n  // \"githubUrl\": \"\",\n  // //   \"datePosted\": \"\"\n  // // },\n\n  // // {\n  // //   \"cardTitle\":\"\",\n  // //   \"projectPic\": \"\",\n  // //   \"imageAlt\": \"\",\n  // //   \"deployedUrl\": \"\",\n  // //   \"description\": \"\",\n  // \"techStack\": \"\",//   \n  // \"githubUrl\": \"\",\n  // //   \"datePosted\": \"\"\n  // // }\n\n]\n\nexport default cardList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Arrow from './components/arrow';\nimport SideBar from './components/sidebar';\nimport NavBar from './components/navbar';\nimport Footer from './components/footer';\nimport JumbotronPage from './components/jumbotron-page';\nimport ProjectSection from './components/project-section';\nimport cardList from './project-card-data';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <NavBar />\n      <div>\n        <SideBar />\n      </div>\n\n      <Arrow arrowColor=\"#dea6af\" zIndex=\"-1\" height=\"580\">\n        <JumbotronPage />\n      </Arrow>\n      <Arrow arrowColor=\"#f3f3f3\" zIndex=\"-2\">\n        <ProjectSection>\n          {cardList}\n        </ProjectSection>\n      </Arrow>\n      <Arrow arrowColor=\"#dea6af\" zIndex=\"-3\" />\n      <App />\n      <Footer />\n    </div>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}